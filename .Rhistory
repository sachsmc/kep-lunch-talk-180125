library(survival)
lung
install.packages('flexsurv')
head(lung)
coxph(Surv(time, status) ~ age, data = lung)
fitcox <- coxph(Surv(time, status) ~ age, data = lung)
plot(fitcox)
fitcox
names(fitcox)
?predict.coxph
termplot(fixcox)
fitcox <- coxph(Surv(time, status) ~ age, data = lung)
termplot(fixcox)
x <- 1:100
z <- factor(rep(LETTERS[1:4], 25))
y <- rnorm(100, sin(x/10)+as.numeric(z))
model <- glm(y ~ ns(x, 6) + z)
par(mfrow = c(2,2)) ## 2 x 2 plots for same model :
termplot(model, main = paste("termplot( ", deparse(model$call)," ...)"))
library(splines)
x <- 1:100
z <- factor(rep(LETTERS[1:4], 25))
y <- rnorm(100, sin(x/10)+as.numeric(z))
model <- glm(y ~ ns(x, 6) + z)
par(mfrow = c(2,2)) ## 2 x 2 plots for same model :
termplot(model, main = paste("termplot( ", deparse(model$call)," ...)"))
termplot(model, rug = TRUE)
termplot(model, partial.resid = TRUE, se = TRUE, main = TRUE)
termplot(model, partial.resid = TRUE, smooth = panel.smooth, span.smth = 1/4)
model
?ns
fitcox <- coxph(Surv(time, status) ~ age, data = lung)
termplot(fitcox)
termplot(fitcox, partial.resid = TRUE)
fitcox <- coxph(Surv(time, status) ~ ns(age, 4), data = lung)
termplot(fitcox, partial.resid = TRUE)
termplot(fitcox, partial.resid = TRUE, smooth = panel.smooth)
hills.lm <- lm(log(time) ~ log(climb)+log(dist), data = MASS::hills)
termplot(hills.lm, partial.resid = TRUE, smooth = panel.smooth,
terms = "log(dist)", main = "Original")
termplot(hills.lm, transform.x = TRUE,
partial.resid = TRUE, smooth = panel.smooth,
terms = "log(dist)", main = "Transformed")
termplot
library(plotROC)
install.packages('plotROC')
library(plotROC)
ggplot(data.frame(D = D, M = M), aes(d = D, m = M)) + geom_roc()
D <- rbinom(200, 1, .2)
M <- rnorm(200, mean = D)
ggplot(data.frame(D = D, M = M), aes(d = D, m = M)) + geom_roc()
ggplot(data.frame(D = D, M = M), aes(d = D, m = M)) + geom_roc() + style_roc()
?geom_roc
ggplot(data.frame(D = D, M = M), aes(d = D, m = M)) + geom_roc(size = 2) + style_roc()
ggplot(data.frame(D = D, M = M), aes(d = D, m = M)) + geom_roc(size.point = 2) + style_roc()
ggplot(data.frame(D = D, M = M), aes(d = D, m = M)) + geom_roc(size = 2) + style_roc()
ggplot(data.frame(D = D, M = M), aes(d = D, m = M)) + geom_roc(size = 1.5) + style_roc()
devtools::install_github('sachsmc/plotROC')
ggplot(data.frame(D = D, M = M), aes(d = D, m = M)) + geom_roc(size = 1.5) + style_roc()
library(plotROC)
D <- rbinom(200, 1, .2)
M <- rnorm(200, mean = D)
ggplot(data.frame(D = D, M = M), aes(d = D, m = M)) + geom_roc(size = 1.5) + style_roc()
library(plotROC)
D <- rbinom(200, 1, .2)
M <- rnorm(200, mean = D)
ggplot(data.frame(D = D, M = M), aes(d = D, m = M)) + geom_roc(size = 1.5) + style_roc()
install.packages("ggplot2")
library(plotROC)
D <- rbinom(200, 1, .2)
M <- rnorm(200, mean = D)
ggplot(data.frame(D = D, M = M), aes(d = D, m = M)) + geom_roc(size = 1.5) + style_roc()
ggplot(data.frame(D = D, M = M), aes(d = D, m = M)) + geom_roc(size.point = 1.5) + style_roc()
?geom_line
ggplot(data.frame(D = D, M = M), aes(d = D, m = M, size = 2)) + geom_roc() + style_roc()
ggplot(data.frame(D = D, M = M), aes(d = D, m = M, size = 1.5)) + geom_roc() + style_roc()
ggplot(data.frame(D = D, M = M), aes(d = D, m = M)) + geom_roc(size = 1.5) + style_roc()
ggplot(data.frame(D = D, M = M), aes(d = D, m = M), size = 1.4) + geom_roc(size = 1.5) + style_roc()
ggplot(data.frame(D = D, M = M), aes(d = D, m = M), size = 1.4) + geom_roc() + style_roc()
ggplot(data.frame(D = D, M = M), aes(d = D, m = M), size = 2) + geom_roc() + style_roc()
?theme
ggplot(data.frame(D = D, M = M), aes(d = D, m = M)) + geom_roc(size.point = 1, size = 2)
ggplot(data.frame(D = D, M = M), aes(d = D, m = M)) + geom_roc(size.point = 1, size = 1.5)
ggplot(data.frame(D = D, M = M), aes(d = D, m = M)) + geom_roc(n.cuts = 0, size.point = .5, size = 1.5)
ggplot(data.frame(D = D, M = M), aes(d = D, m = M)) + geom_roc(n.cuts = 0, size = 1.5)
ggplot(data.frame(D = D, M = M), aes(d = D, m = M)) + geom_roc(n.cuts = 0, size.point = 1, size = 1.5) +
theme(panel.grid = element_line(size = 2)) + style_roc()
ggplot(data.frame(D = D, M = M), aes(d = D, m = M)) + geom_roc(n.cuts = 0, size.point = 1, size = 1.5) +
theme(panel.grid.major = element_line(size = 2))
ggplot(data.frame(D = D, M = M), aes(d = D, m = M)) + geom_roc(n.cuts = 0, size.point = 1, size = 1.5) +
theme(panel.grid.major = element_line(size = 2)) + style_roc()
?style_roc
theme_bw(panel.grid.major = element_line(size = 2))
mytheme <- theme_bw() + theme(panel.grid.major = element_line(size = 2))
ggplot(data.frame(D = D, M = M), aes(d = D, m = M)) + geom_roc(n.cuts = 0, size.point = 1, size = 1.5) +
style_roc(theme = mytheme)
mytheme <- theme_bw() + theme(panel.grid.major = element_line(size = 5))
ggplot(data.frame(D = D, M = M), aes(d = D, m = M)) + geom_roc(n.cuts = 0, size.point = 1, size = 1.5) +
style_roc(theme = mytheme)
mytheme <- theme_bw() %+replace% theme(panel.grid.major = element_line(size = 5))
ggplot(data.frame(D = D, M = M), aes(d = D, m = M)) + geom_roc(n.cuts = 0, size.point = 1, size = 1.5) +
style_roc(theme = mytheme)
mytheme
ggplot(data.frame(D = D, M = M), aes(d = D, m = M)) + geom_roc(n.cuts = 0, size.point = 1, size = 1.5) +
style_roc(theme = mytheme())
mytheme <- theme_grey() %+replace% theme(panel.grid.major = element_line(size = 5))
ggplot(data.frame(D = D, M = M), aes(d = D, m = M)) + geom_roc(n.cuts = 0, size.point = 1, size = 1.5) +
style_roc(theme = mytheme)
ggplot(data.frame(D = D, M = M), aes(d = D, m = M)) + geom_roc(n.cuts = 0, size.point = 1, size = 1.5) +
style_roc(theme = mytheme) + mytheme
mytheme <- theme_grey() %+replace% theme(panel.grid.major = element_line(size = 2))
ggplot(data.frame(D = D, M = M), aes(d = D, m = M)) + geom_roc(n.cuts = 0, size.point = 1, size = 1.5)+ mytheme +
style_roc(theme = mytheme)
mytheme <- theme_grey() + theme(panel.grid.major = element_line(size = 2))
ggplot(data.frame(D = D, M = M), aes(d = D, m = M)) + geom_roc(n.cuts = 0, size.point = 1, size = 1.5)+ mytheme +
style_roc(theme = mytheme)
theme_bw
mytheme <- function() {
theme_grey() + theme(panel.grid.major = element_line(size = 2))
}
ggplot(data.frame(D = D, M = M), aes(d = D, m = M)) + geom_roc(n.cuts = 0, size.point = 1, size = 1.5)+
style_roc(theme = mytheme)
ggplot(data.frame(D = D, M = M), aes(d = D, m = M)) +
geom_roc(n.cuts = 0, size.point = 1, size = 1.5) +
style_roc() + geom_abline(slope = 1, intercept = 0, size = 1.5)
ggplot(data.frame(D = D, M = M), aes(d = D, m = M)) +
geom_roc(n.cuts = 0, size.point = 1, size = 1.5) +
style_roc() + geom_abline(slope = 1, intercept = 0, size = 1.5, color = 'white')
ggplot(data.frame(D = D, M = M), aes(d = D, m = M)) +
geom_roc(n.cuts = 0, size.point = 1, size = 1.5) +
style_roc() + geom_abline(slope = 1, intercept = 0, size = 1.5, color = 'grey50')
ggplot(data.frame(D = D, M = M), aes(d = D, m = M)) +
geom_roc(n.cuts = 0, size.point = 1, size = 1.25) +
style_roc() + geom_abline(slope = 1, intercept = 0, size = 1.5, color = 'grey50')
library(plotROC)
D <- rbinom(200, 1, .2)
M <- rnorm(200, mean = D)
ggplot(data.frame(D = D, M = M), aes(d = D, m = M)) +
geom_roc(n.cuts = 0, size.point = 1, size = 1.25) +
style_roc() + geom_abline(slope = 1, intercept = 0, size = 1.5, color = 'grey50')
?list.files
?grep
?power.t.test
power.t.test(delta = 5, sd = 5, type = "one.sample")
power.t.test(delta = 5, sd = 5, type = "one.sample", power = 0.8)
curve(power.t.test(delta = 5, sd = 5, type = "one.sample", n = x), from = 2, to = 25)
curve(power.t.test(delta = 5, sd = 5, type = "one.sample", n = x)$power, from = 2, to = 25)
library(ggplot2)
?geom_function
?stat_function
library(dplyr)
library(purrr)
cross_d(list(n = 2:50,
delta = c(3, 4, 5, 6)))
cross_d(list(n = 2:50,
delta = c(2, 3, 4, 5, 6),
sd = c(3, 4, 5, 6, 7)))
dfin <- cross_d(list(n = 2:50,
delta = c(2, 3, 4, 5, 6),
sd = c(3, 4, 5, 6, 7)))
dfin$power <- with(dfin,
power.t.test(n = n, delta = delta, sd = sd,
type = "one.sample")$power)
dfin
library(ggthemes)
install.packages("ggthemes")
ggplot(dfin, aes(x = n, y = power, color = delta)) + geom_line() + facet_wrap(~ sd)
ggplot(dfin, aes(x = n, y = power, color = factor(delta))) + geom_line() + facet_wrap(~ sd)
?facet_wrap
ggplot(dfin, aes(x = n, y = power, color = factor(delta))) + geom_line() + facet_wrap(~ sd, labeller = "label_both")
ggplot(dfin, aes(x = n, y = power, color = factor(delta))) + geom_line() +
facet_wrap(~ sd, labeller = "label_both") + scale_color_ptol("Effect")
library(ggthemes)
ggplot(dfin, aes(x = n, y = power, color = factor(delta))) + geom_line() +
facet_wrap(~ sd, labeller = "label_both") + scale_color_ptol("Effect")
ggplot(dfin, aes(x = n, y = power, color = factor(delta))) + geom_line(size = 1.5) +
facet_wrap(~ sd, labeller = "label_both") + scale_color_ptol("Effect")
ggplot(dfin, aes(x = n, y = power, color = factor(delta))) + geom_line(size = 1.25) +
facet_wrap(~ sd, labeller = "label_both") + scale_color_ptol("Effect") + theme_igray()
ggplot(dfin, aes(x = n, y = power, color = factor(delta))) + geom_line(size = 1.25) +
facet_wrap(~ sd, labeller = "label_both") + scale_color_ptol("Effect") + theme_minimal()
dfin <- cross_d(list(n = 2:50,
delta = c(2, 3, 4, 5, 6),
sd = c(4, 5, 6, 7)))
dfin$power <- with(dfin,
power.t.test(n = n, delta = delta, sd = sd,
type = "one.sample")$power)
ggplot(dfin, aes(x = n, y = power, color = factor(delta))) + geom_line(size = 1.25) +
facet_wrap(~ sd, labeller = "label_both") + scale_color_ptol("Effect") + theme_minimal()
?scale_color_ptol
ggplot(dfin, aes(x = n, y = power, color = factor(delta))) + geom_line(size = 1.25) +
facet_wrap(~ sd, labeller = "label_both") + scale_color_few("Effect") + theme_minimal()
ptol_pal()
ptol_pal()(3)
ggplot(dfin, aes(x = n, y = power, color = factor(delta))) + geom_line(size = 1.25) +
facet_wrap(~ sd, labeller = "label_both") + scale_color_brewer("Effect") + theme_minimal()
library(viridis)
ggplot(dfin, aes(x = n, y = power, color = factor(delta))) + geom_line(size = 1.25) +
facet_wrap(~ sd, labeller = "label_both") + scale_color_viridis("Effect") + theme_minimal()
ggplot(dfin, aes(x = n, y = power, color = factor(delta))) + geom_line(size = 1.25) +
facet_wrap(~ sd, labeller = "label_both") + scale_color_viridis("Effect", discrete = TRUE) +
theme_minimal()
?scale_colour_viridis
ggplot(dfin, aes(x = n, y = power, color = factor(delta))) + geom_line(size = 1.25) +
facet_wrap(~ sd, labeller = "label_both") +
scale_color_viridis("Effect", option = "D", discrete = TRUE) +
theme_minimal()
ggplot(dfin, aes(x = n, y = power, color = factor(delta))) + geom_line(size = 1.25) +
facet_wrap(~ sd, labeller = "label_both") +
scale_color_viridis("Effect", option = "C", discrete = TRUE) +
theme_minimal()
ggplot(dfin, aes(x = n, y = power, color = factor(delta))) + geom_line(size = 1.25) +
facet_wrap(~ sd, labeller = "label_both") +
scale_color_viridis("Effect", option = "C", discrete = TRUE) +
theme_fivethirtyeight()
ggplot(dfin, aes(x = n, y = power, color = factor(delta))) + geom_line(size = 1.25) +
facet_wrap(~ sd, labeller = "label_both") +
scale_color_viridis("Effect", option = "A", discrete = TRUE) +
theme_fivethirtyeight()
ggplot(dfin, aes(x = n, y = power, color = factor(delta))) + geom_line(size = 1.25) +
facet_wrap(~ sd, labeller = "label_both") +
scale_color_brewer("Effect") +
theme_fivethirtyeight()
ggplot(dfin, aes(x = n, y = power, color = factor(delta))) + geom_line(size = 1.25) +
facet_wrap(~ sd, labeller = "label_both") +
scale_color_viridis("Effect", discrete = TRUE) +
theme_igray()
ggplot(dfin, aes(x = n, y = power, color = factor(delta))) + geom_line(size = 1.25) +
facet_wrap(~ sd, labeller = "label_both") +
#scale_color_viridis("Effect", discrete = TRUE) +
theme_igray()
ggplot(dfin, aes(x = n, y = power, color = factor(delta))) + geom_line(size = 1.25) +
facet_wrap(~ sd, labeller = "label_both") +
scale_color_viridis("Effect", discrete = TRUE) +
theme_stata()
ggplot(dfin, aes(x = n, y = power, color = factor(delta))) + geom_line(size = 1.25) +
facet_wrap(~ sd, labeller = "label_both") + xlab("Sample size") + ggtitle("Power for 1 sample t-test comparing to historical value of 0")
scale_color_viridis("Effect", discrete = TRUE) +
theme_stata()
ggplot(dfin, aes(x = n, y = power, color = factor(delta))) + geom_line(size = 1.25) +
facet_wrap(~ sd, labeller = "label_both") + xlab("Sample size") +
ggtitle("Power for 1 sample t-test comparing to historical value of 0") +
scale_color_viridis("Effect", discrete = TRUE) +
theme_pander()
ggplot(dfin, aes(x = n, y = power, color = factor(delta))) + geom_line(size = 1.25) +
facet_wrap(~ sd, labeller = "label_both") + xlab("Sample size") +
ggtitle("Power for 1 sample t-test comparing to historical value of 0") +
scale_color_viridis("Effect", discrete = TRUE) +
theme_solarized()
dfin
subset(dfin, power < .81 & power > .79)
?power.t.test
library(tidyr)
?spread
dfin %>% spread(delta, power)
dfin %>% spread(delta, power, sep = "=")
dfin %>% spread(delta, power, sep = "=") %>% group_by(sd)
?sort_by
dfin %>% spread(delta, power, sep = "=") %>% sort_by(sd)
library(knitr)
s = 5
dfin %>% filter(sd == s) %>% spread(delta, power, sep = "=") %>% kable
dfin %>% filter(sd == s) %>% spread(delta, power, sep = "=") %>% kable(digits = 2)
citation()
about()
?citation
R.Version
R.Version()
?apply
?upper.tri
seq.int
?seq.int
?difftime
?diag
?lag
?vapply
?rep
?library(survival)
library(survival)
?coxph
test2 <- list(start=c(1, 2, 5, 2, 1, 7, 3, 4, 8, 8),
stop =c(2, 3, 6, 7, 8, 9, 9, 9,14,17),
event=c(1, 1, 1, 1, 1, 1, 1, 0, 0, 0),
x    =c(1, 0, 0, 1, 0, 1, 1, 1, 0, 0) )
summary( coxph( Surv(start, stop, event) ~ x, test2))
test2
as.data.frame(test2)
?merge
?render
library(rmarkdown)
?render
setwd("H:/Core Projects/Biostat Talk 20160906")
kable(head(mtcars), digits = 2, align = c(rep("l", 4), rep("c", 4), rep("r", 4)))
library(xtable)
kable(head(mtcars), digits = 2, align = c(rep("l", 4), rep("c", 4), rep("r", 4)))
library(knitr)
kable(head(mtcars), digits = 2, align = c(rep("l", 4), rep("c", 4), rep("r", 4)))
library(pander)
install.packages("pander")
library(pander)
pandoc.table(head(mtcars))
